['Dear <img src="https://aws1.discourse-cdn.com/business7/uploads/ros/original/2X/4/45531b551e689d82d6aec0344860112aeeea2d7b.png?v=12" title=":ros:" class="emoji emoji-custom" alt=":ros:" loading="lazy" width="20" height="20"> community,', 'we introduce ROS2swarm, a ROS 2 package intended to simplify and promote the use of ROS 2 in swarm robotics research and education. ROS2swarm is an easy-to-extend framework for and library of swarm behaviors.', 'ROS2swarm currently provides six movement patterns for robot motion and two voting patterns for collective decision-making. We distinguish between basic patterns that implement primitive swarm behaviors and combined patterns that implement more complex behaviors. Parameter files allow the adjustment of patterns for different robot platforms and scenarios. In addition, we included a hardware protection layer to prevent hardware damage.', 'The package is available for Dashing and Foxy <img src="https://aws1.discourse-cdn.com/business7/uploads/ros/original/2X/3/344de41e02f077024f3074b1d56045570ba8a2a9.png?v=12" title=":foxy:" class="emoji emoji-custom" alt=":foxy:" loading="lazy" width="20" height="20"> since our main development platform is the TurtleBot3 Waffle Pi. Furthermore, we provide out-of-the-box support for the TurtleBot3 Burger and the Jackal UGV (using the <a href="https://github.com/ros2/ros1_bridge" rel="noopener nofollow ugc">ros1_bridge</a> package). We also provide simulations in Gazebo for all three platforms to simplify development. New platforms that provide distance measurements in a LaserScan message and are controlled by linear velocities along the x-axis and rotational velocities around the z-axis can easily be added.', 'Currently, we are working on integrating support for robots with less sophisticated sensor setups, such as the Thymio II, enabling local communication, and adding more swarm behaviors.', 'A detailed description of our ROS2swarm package can be found in our <a href="http://heikohamann.de/pub/kaiserICRA2022.pdf" rel="noopener nofollow ugc">paper</a>. The package itself is available <a href="https://gitlab.iti.uni-luebeck.de/ROS2/ros2swarm" rel="noopener nofollow ugc">here</a>. If you are attending ICRA’22, come to our talk (session: Multi-Robot and Swarm Robotics II) and visit us during the poster session or watch our presentation online (registration for online participance is free).', 'We hope to create a community that joins our effort to advance the package. Please contact us if you have ideas for new features or - even better - if you want to contribute yourself.']['I’d like to show off a Colcon plugin I’ve been working on that lets you use Poetry instead of setuptools (<code>setup.py</code>, <code>setup.cfg</code>) to declare your Python ROS2 packages and their dependencies!', 'An extension for colcon-core that adds support for Poetry in ROS projects - GitHub - UrbanMachine/colcon-poetry-ros: An extension for colcon-core that adds support for Poetry in ROS projects', 'In case you’re unfamiliar, Poetry is an alternative packaging and dependency management tool for Python. It creates and maintains a lock file for your dependencies out of the box, which makes achieving reliable builds easy.', 'Poetry uses the new-ish <code>pyproject.toml</code> standard for defining Python packages instead of <code>setup.py</code> or <code>setup.cfg</code>. Colcon-poetry-ros takes care of pulling the information that Colcon needs from the <code>pyproject.toml</code>. It has support for defining nodes, running tests, and including data files. I’ve also included a small utility that assists in installing your Python dependencies to Colcon’s <code>install/</code> directory.', 'Please let me know what you think! This is the first Colcon plugin I’ve written, so I would appreciate any feedback.']['This is amazing, I’ve been integrating poetry manually in my environment but this will make life easier. Thanks!']['I was wondering if there is any ROS/ROS2 package (simulation in gazebo) built and open sourced for Mars Helicopter <code>Ingenuity</code> ?? If any one has any knowledge regarding this matter (e.g. built/building/half built), please share your experience and point to the github repository/website. Thanks !!']['In ROS1, <a href="https://fkie.github.io/catkin_lint/" rel="noopener nofollow ugc">catkin_lint</a> is a tool that helps parse through your cmakelists and package.xml for common errors. I particularily found it very useful to find missing or mis-classified dependencies in my package.xml files. Does anyone know of any tool that provides similar functionality for ros2?']['Roughly a year ago I asked the same thing from the maintainers of ament lint but it wasn’t part of the plan at that time. I think it’d be very useful and pretty much the full functionality could be achieved with an ament version.']['It would be great to have one <img src="https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:">']['There’s a package <a href="https://github.com/ament/ament_lint/tree/master/ament_xmllint">ament_xmllint</a> which was created for that purpose. It looks like the basic functionality is there and it will need to use the package.xml schema to validate the xml appropriately.', 'If someone would like to extend this I’m sure that would be appreciated by the maintainers.']['I do use xmllint, but that’s just validating the xml file follows the schema. Catkin lint was able to do things like check for missing depends in the package xml, which requires a lot more information than just the schema.']['This topic was automatically closed 30 days after the last reply. New replies are no longer allowed.']['Incorporating ABI compatibility checks in CI pipelines of core ROS 2 packages.', '<a href="https://www.ros.org/reps/rep-0009.html">REP-0009 “ABI compatibility”</a> requires that, on a “best effort” basis, ABI compatibility be maintained for even-cycle patch releases of the public facing API of a package.', 'While the PR review process, developer guide, and manual ABI compatibility checking cover most bases, I believe being able to automate this process provides ease-of-mind value to authors, maintainers, and reviewers of the C/C++ libraries within the ROS 2 core. Having ABI compatibility results between a suggested patch and its targeted base available in the CI pipeline could even help in discussing designs that are (more) easily backportable - an issue I’ve seen quite a few non-trivial PRs in <code>rclcpp</code> facing.', 'Also, why do the check yourself when a computer can do it instead!', 'Essentially, the package needs to be built twice, once with the changes in the current HEAD reference, and once with the base said PR is targeting. The two build artifacts representing the respective library ELF binaries can then be supplied to an ABI compatibility checker. One tool to facilitate this proposal would be RedHat’s <a href="https://sourceware.org/libabigail/manual/abidiff.html" rel="noopener nofollow ugc"><code>abidiff</code></a>.', 'I recognize that this is not particularly high priority given the frequency of ABI compatibility issues within core ROS 2 packages, but I’d still like to hear others’ thoughts on augmenting the ROS 2 developer experience like this.', 'Are there any latent pros/cons of this proposal which weren’t considered here?', 'Is this something anyone has tried to do with their own ROS packages/libraries?', 'Is it worth the churn given that it isn’t a particularly low-hanging fruit?', '(If this isn’t the right place to have this discussion, feel free to redirect!)']['So it turns out that we already have some builtin buildfarm support for this, in the form of a <code>test_abi</code> flag that can be added to a package in rosdistro (e.g. <a href="https://github.com/ros/rosdistro/blob/506ea82e36f8847407fd55a2f86933d9a890329e/foxy/distribution.yaml#L528-L544" class="inline-onebox" rel="noopener nofollow ugc">rosdistro/distribution.yaml at 506ea82e36f8847407fd55a2f86933d9a890329e · ros/rosdistro · GitHub</a>).  That said, we don’t enable this on very many packages, and I honestly don’t know what the result of doing that is.  I believe <a class="mention" href="/u/jrivero">@jrivero</a> did most of the implementation of that, so may be able to provide more details on exactly what that option does.']['<a class="mention" href="/u/aprotyas">@aprotyas</a> thanks for bringing this up, i believe this really helps for review and process. probably automatically labeling <code>api-review</code> / <code>abi-review</code> would be nice to see for each PR.']['I would love a tool like this for Nav2 so that I can be confident about what I can and cannot backport on an immediate glance without having to re-read code every time I do a sync to older distributions.', 'I’d love this even more if it were an <code>ament_abi</code> tool that could be run as part of the default automatic profile of static analysis tools – but even just some standard tool and profile across the ROS community would have value.']['I wanted to have something like this since ROS Hydro but never got around to implement it!', 'I think an <code>ament_</code> wrapper may not be the right venue for this as it’d flag it up inappropriately as a test failure whether you like it or not.', 'While something you can simply slap onto your gh workflows and configure which branch to apply it to would be awesome, in most cases maintainers would only need this to flag up a warning for branches where ABI is meant to stay stable.']['I think an <code>ament_</code> wrapper may not be the right venue for this as it’d flag it up inappropriately as a test failure whether you like it or not.', 'How I was imagining using it was to create a compiler flag for whether or not its valid for there to be ABI breaking changes and set the docker container for each branch to set whether its valid to run the <code>ament_</code> wrapper such that PRs on stable distribution branches would fail the test if it changed ABI.', 'But agreed, that may not be the preferable way of doing it. I’m open to other workflows - I’m sure there must be some conventions around this from other communities.']['So it turns out that we already have some builtin buildfarm support for this, in the form of a <code>test_abi</code> flag that can be added to a package in rosdistro', 'That certainly sounds close to the topic here - not sure why I never noticed this in action. Maybe the PR reviewers are doing a great job! <img src="https://emoji.discourse-cdn.com/twitter/smile.png?v=10" title=":smile:" class="emoji" alt=":smile:">', 'immediate glance without having to re-read code every time I do a sync to older distributions.', 'I concur that this is the use-case that’d see most of the gains if ABI compatibility checks were enabled.', 'While something you can simply slap onto your gh workflows and configure which branch to apply it to would be awesome, in most cases maintainers would only need this to flag up a warning for branches where ABI is meant to stay stable.', 'Yes, this is really what I was envisioning with this as well. Ideally, there will be a Github Action (think ros-tooling/action-ros-ci) that can be tacked on as an additional step to (existing) Github CI workflows - at best, maybe a 3 line addition to CI workflows! I haven’t fully thought about the mechanics but this might be complicated for repositories that either (a) generate multiple targets or (b) house multiple packages.', 'On the other hand, an <code>ament_</code> wrapper might be a bit awkward to work around because the ABI checking portion shouldn’t creep into the package’s build system information, like its CMakeLists.txt file. Also, if anyone is so inclined to clone/build/test a PR locally, running an ABI compatibility checker on top would not be a big deal. I think the real utility is for backport reviewss and initial phase review discussions on Github’s online PR interface.', 'I’m sure there must be some conventions around this from other communities.', 'My cursory search online didn’t lead to much… but if anyone can find examples of similar workflows in the wild, feel free to drop it in the comments.']['I already opened issue about this on ros-controls/ros2_control repository. I am planing to support community contribution for creation of a first viable pipeline. I have a clear idea how this should work, but I, don’t have the capacity to tackle it. If you want to keep updated about this check our issue I hope we can motivate someone to tackle this in the next weeks.', 'P.S. We will probably go with industrial_ci first (I know it better) and then we can check how to add this into a tooling action.']['Just thought I’d mention <code>industrial_ci</code> supports <a href="https://github.com/ros-industrial/industrial_ci/blob/ffb174a4311e6fe31b5d8d92136e14ef3f8f4685/doc/index.rst#abi-checks" rel="noopener nofollow ugc">ABI checks</a> (<a href="https://github.com/ros-industrial/industrial_ci/blob/ffb174a4311e6fe31b5d8d92136e14ef3f8f4685/.github/workflows/main.yml#L120-L152" rel="noopener nofollow ugc">example GHA config</a>).', '<a class="mention" href="/u/ipa-mdl">@ipa-mdl</a> put quite some work into that.']['How to program Autonomous Navigation under LIMO’s multi-modal steering based on its integrating AI modules and open-source ROS packages? Check out the <a href="https://www.linkedin.com/feed/update/urn:li:activity:6868845670263074816" rel="noopener nofollow ugc">ROS demo video</a> contributed by GUYUEHOME, the pioneer of China’s ROS Community.', '<a href="https://www.agilex.ai/product/12?lang=en-us" rel="noopener nofollow ugc">AgileX Robotics LIMO</a> is a great tool to learn and verify multi-functional autonomous driving algorithms like SLAM and V-SLAM for educational purposes and industrial robot applications research.', 'Some Features:']['This topic was automatically closed 30 days after the last reply. New replies are no longer allowed.']['Our team at NVIDIA has created ROS2 containers for NVIDIA Jetson platform based on <a href="https://index.ros.org/doc/ros2/Installation/">ROS2 Installation Guide</a> and <a href="https://github.com/dusty-nv/jetson-containers" rel="noopener nofollow ugc">dusty-nv/jetson-containers</a>', 'NVIDIA Jetson provides various AI application ROS/ROS2 packages, please <a href="https://nvidia-ai-iot.github.io/ros2_jetson/" rel="noopener nofollow ugc">find here more information</a>', 'ROS2 Foxy / Eloquent with PyTorch and TensorRT Docker Image consists of following:', 'ROS2 Foxy / Eloquent NVIDIA DeepStream SDK Docker image consists of following:', 'We also have released two more new packages for edge AI applications :', 'For previously released package, please find ROS2 WG meeting notes <a href="https://vimeo.com/487339164" rel="noopener nofollow ugc">here</a>, GitHub Links <a href="https://nvidia-ai-iot.github.io/ros2_jetson/ros2-packages/" rel="noopener nofollow ugc">here</a> and Blog post <a href="https://developer.nvidia.com/blog/implementing-robotics-applications-with-ros-2-and-ai-on-jetson-platform-2/" rel="noopener nofollow ugc">here</a>', 'If you face any problem please open an issue on the GitHub repo and we will try to address them soon.']['Wow, great examples. Are you thinking about to provide inference examples based on <a href="https://onnx.ai/" rel="noopener nofollow ugc">ONNX</a> packaged models as well? In comparison to Python pickle-based packaged models ONNX packaged models can be run on top of a lot of potentially way faster <a href="https://www.onnxruntime.ai/" rel="noopener nofollow ugc">runtimes</a>. I’m not quite sure about if there is NVIDIA specifc hardware acceleration supported already but according to the <a href="https://onnx.ai/supported-tools.html" rel="noopener nofollow ugc">ONNX website</a> in general NVIDIA acceleration seems to be supported or at least planned.']['Thank you <a class="mention" href="/u/fkromer">@fkromer</a>', 'We accelerated using NVIDA TensorRT with <a href="https://github.com/NVIDIA-AI-IOT/torch2trt" rel="noopener nofollow ugc">torch2trt</a>: An easy to use PyTorch to TensorRT converter. In TensorRT, we first convert PyTorch model to ONNX and then to TensorRT.', 'All the packages are accelerated for NVIDIA Jetson Hardware.', 'For example: <a href="https://github.com/NVIDIA-AI-IOT/ros2_trt_pose" rel="noopener nofollow ugc">Human Pose Estimation ROS2 Package</a> accelerated with TensorRT has higher FPS with lower GPU utilization.', 'For more on NVIDIA TensorRT, please find brief highlights <a href="https://docs.nvidia.com/deeplearning/tensorrt/developer-guide/index.html#overview" rel="noopener nofollow ugc">here</a>']['Hi <a class="mention" href="/u/ak-nv">@ak-nv</a> we’ve been working quite hard on ROS 1 and ROS 2 packages for conda. These packages are cross-platform, and we could use cuda / cudnn etc. from the conda-forge channel. NVidia is actually quite active in the <em>conda-forge</em> community which our effort is based on. I am wondering if there is any interest by NVidia to also make the conda-package route attractive for Jetson? We already have ARM64 packages for ROS noetic, and for Foxy we just need to turn it on. Would be happy to give you a demo / chat about this. PS: Here is a link with our recent updates <a href="https://medium.com/robostack/cross-platform-conda-packages-for-ros-fa1974fd1de3" class="inline-onebox" rel="noopener nofollow ugc">Cross-platform conda packages for ROS | by Wolf Vollprecht | robostack | Feb, 2021 | Medium</a>']['<a class="mention" href="/u/ak-nv">@ak-nv</a> This is quite helpful. Do your containers also provide OpenCV?']['Yes. Please also check <a href="https://github.com/NVIDIA-AI-IOT/ros2_jetson/tree/main/docker" rel="noopener nofollow ugc">DockerFiles</a> if needed.']['Great, thanks. I was having trouble building anything that used opencv in the docker, but I think it was just that the <code>libopencv-dev</code> package was missing.']['Isaac ROS is available now at <a href="http://github.com/NVIDIA-ISAAC-ROS" rel="noopener nofollow ugc">github.com/NVIDIA-ISAAC-ROS</a>. Clone the repositories you need into your ROS workspace to build from source with colcon alongside your other ROS2 packages.', 'Our latest release includes hardware accelerated ROS2 Foxy packages for image processing and deep learning, tested on Jetson <a href="https://www.nvidia.com/en-us/autonomous-machines/embedded-systems/jetson-agx-xavier/" rel="noopener nofollow ugc">AGX Xavier</a> with <a href="https://developer.nvidia.com/embedded/jetpack" rel="noopener nofollow ugc">JetPack 4.6</a>.']['Isaac GEMs for ROS are hardware accelerated packages that make it easier for ROS developers to build high-performance solutions on the Jetson platform. These packages reduce the load on the host CPU while providing significant performance gain.', 'The released Isaac GEMs for ROS include:', 'If you face any problem please open an issue on the GitHub repo and we will try to address them soon.']['This topic was automatically closed 30 days after the last reply. New replies are no longer allowed.']['Hello,', 'We recently published <a href="https://index.ros.org/p/massrobotics_amr_sender/#foxy">massrobotics_amr_sender package</a>. This is a configuration-based ROS2 package for sending MassRobotics <a href="https://github.com/MassRobotics-AMR/AMR_Interop_Standard" rel="noopener nofollow ugc">AMR Interop Standard messages</a> to compliant receivers. So now, any ROS2 robot developer can implement this standard without having to write too much code. In particular the Mass standard provides observability, including localization and other status data.', 'The package works by mapping ROS topics, environment variables and constants to different message fields as defined by the standard and then sends messages to the server using websockets. The mapping is configurable through a YAML file.', 'This is all part of our efforts at <a href="https://inorbit.ai" rel="noopener nofollow ugc">InOrbit</a> to ease the often complex orchestration of heterogeneous fleets that mix ROS and non-ROS robots in the field. Our team started by researching existing interoperability standards to understand how to help make ROS based robots meet compliance and interact effectively with other robots and applications.', 'This package has also been presented in a <a href="https://www.massrobotics.org/" rel="noopener nofollow ugc">MassRobotics</a> Webinar, which is available to view on <a href="https://www.youtube.com/watch?v=kWro-spMivI" rel="noopener nofollow ugc">YouTube</a>. Please watch if you’d like to learn more about the MassRobotics initiative', 'The InOrbit team hopes to continue exploring other standards, like VDA 5050 and OPC-UA, as our work continues so we appreciate any feedback you may have about the package and the interop &amp; standards topic.', 'Thanks !']['FYI: The first link you posted goes to an empty ROS index listing.']['Hey, thanks a lot Katherine !']['Hello,', 'We are working on MassRobotics AMR Interop Standard, too. As part of that, we have created a bridge for ROS1.', 'Contribute to LexxPluss/amr_interop_bridge development by creating an account on GitHub.', 'If you are a ROS1 user, we hope you will take a look at it as well.']['Great work <a class="mention" href="/u/kokosabu">@kokosabu</a> , I see that in your package you’d decoupled translating from ROS to Mass types from actually publishing to the web socket endpoint, that’s an interesting approach. We didn’t do that to try to have a single node that’s easier to setup, although your approach may enable more flexibility.', 'Have you tried it on an actual robot or simulation ? We at <a href="https://inorbit.ai" rel="noopener nofollow ugc">InOrbit</a> have also implemented the receiver part in our Platform, so data from Mass compatible robots can be seen in a nice UI (including live &amp; historical data), used to trigger incidents depending on rules and notify via Slack and other means. Data can also be queried via APIs. Let me know if you are interested in giving it a try (for free) to see how the pieces can work together thanks to the standard.', 'Regards']['<a class="mention" href="/u/mikegarcia">@MikeGarcia</a> Thank you.', 'I just tried it with the <a href="https://github.com/MassRobotics-AMR/AMR_Interop_Standard/tree/main/MassRobotics-AMR-Receiver" rel="noopener nofollow ugc">MassRobotics-AMR-Receiver</a> that comes with <a href="https://github.com/MassRobotics-AMR/AMR_Interop_Standard" rel="noopener nofollow ugc">AMR_Interop_Standard</a>. ( Probably a project you have contributed to. )', 'Haven’t tried it with an actual robot yet. This is because there are some parts that are not covered by the required properties during implementation.', 'Despite this situation, I’m interested in trying it with InOrbit. I’ll talk to my team members about it, maybe they’ll be interested as well.']['Been working on a new ublox dgnss driver for &gt; Gen 9 Ublox devices such as the ZED-F9P. I was thinking of publishing it. Have never published a ros package before.', 'Git hub repo here <a href="https://github.com/aussierobots/ublox_dgnss" rel="noopener nofollow ugc">https://github.com/aussierobots/ublox_dgnss</a>', 'I built this one as the previous ublox ubx driver was built using the previous standards which are being deprecated. It also did not have the high precision output messages I was looking for. They advised that the package was no longer being actively maintained.', 'The package I’ve created works against Galactic (and had previously run it against Foxy).', 'Thanks']['1/ is this package of interest to others?', 'AFAIK, there are not many available drivers for ublox, one is <a href="https://github.com/KumarRobotics/ublox" class="inline-onebox" rel="noopener nofollow ugc">GitHub - KumarRobotics/ublox: A driver for ublox gps</a> and has next to no movement lately. The other one is, <a href="https://github.com/boschresearch/nmea_navsat_driver" class="inline-onebox" rel="noopener nofollow ugc">GitHub - boschresearch/nmea_navsat_driver: ROS package containing drivers for NMEA devices that can output satellite navigation data (e.g. GPS or GLONASS).</a> which I haven’t fully set an eye upon but was curious to check out.', 'However, most of them were developed a time ago and don’t seem to be completely ported (or maybe not maintained) for ROS2.', 'Thus, I do believe this package may be of interest.', 'I, unfortunately, can’t help in regards to how to release packages as I don’t have the knowledge, but I’ll try to check out the code later.']['2/ what are the steps to create a new package?', 'I  can’t help you on any other questions, but if you decide to publish it, I can help provide documentation through that process.']['It was the KumarRobotics package that I was looking at before deciding to write this. I’m using ubx-cfg-valset &amp; cfg-val-valget commands available in gen 9 devices. As well, added the high precision messages that I was after. UBX is of course a binary interface. I decided also not to go down the USB Serial interface route but instead to use libusb-1.0. All messages received back in callbacks from the GPS device are stored in a queue with a timestamp. Another timer handles that queue and publishing. Would love some feedback on the async nature. I really did not know how to handle futures in a c++ ros2 node']['Was thinking of doing a little bit more testing in the field. Then after that publishing it. So any help with the steps would be great <img src="https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">']['This is a general no-nonsense “here’s what to do” guide. Its by far not exhaustive of all the ways to release software, but it is the most straight forward way without getting bogged down too much into what exactly is going on in the background.']['I recently worked with ublox-F9R module and didn’t find a great ROS(1) package for it. I wanted to receive GPS data, fix-type (other NMEA stuff) and also send back RTCM corrections. I ended up writing the driver myself. An attempt to answer your specific questions -']['For what it is worth, I did the port of <a href="https://github.com/KumarRobotics/ublox" class="inline-onebox" rel="noopener nofollow ugc">GitHub - KumarRobotics/ublox: A driver for ublox gps</a> to ROS 2.  Saying that there is little “movement” in that driver is a bit disingenuous; other than a PR from myself, there are no currently open PRs against the <code>foxy-devel</code> branch in that repository.', 'That said, I haven’t had time to do any additional development on it.  I also don’t have any hardware other than the Ublox C94-M8T.', 'Overall, I would generally prefer to have one well supported driver rather than several half-implemented ones.  From that perspective, it would make much more sense to me to add the changes for the new drivers into the KumarRobotics one.']['Just to pile on here - the way that the KumarRobotics/ublox driver was written it should be relatively straight forward to add new generations of ublox devices to it. I remember adding the M8T and M8U devices back in the day, and then watching others add the “new” ZED F9 series to it as well.', 'I’d recommend trying to first add whatever you think is missing to that package as I think it would be easier for everyone to have one really well maintained package.']['I asked about the high precision messages (available on the f9p) and was advised that the repo wasn’t being actively maintained <a href="https://github.com/KumarRobotics/ublox/issues/130" class="inline-onebox" rel="noopener nofollow ugc">Publishing high precision HPPOSECEF &amp; HPPOSLLH messages · Issue #130 · KumarRobotics/ublox · GitHub</a>', 'When I looked at the code, I couldn’t easily work out how to add new message types. I also noticed that the code wasn’t using ubx-cfg-valget or ubx-cfg-valset but was using the deprecated cfg messages. It appears UBLOX with UBX has taken a different approach with generation 9 devices. Generation 10, I assume will use the new.', 'So I decided to write a new driver, for my purposes, that also didn’t use a serial interface, but used libusb-1.0 with an async interface.', 'It’s time consuming adding all the configuration variables and messages. I’ve not done the RTCM ones as yet. The driver that I’ve written works well. Can also unplug it, go to u-center, change settings, and then replug it in. It picks up the USB hot plug attach event and resends the local configuration to ram in the gps device.', 'Whilst I agree basically with your sentiment, I think these newer devices have a different interfacing style. The generation 9 devices have deprecated the configuration interface for the generation 8 devices, the ones coming will most likely not work with generation 8 and below configuration commands. Hence why I’ve focused purely on generation 9, configuration interfacing, using ubx-cfg-valget and ubx-cfg-valset, with an emphasis on ubx messages and high precision.']['I’ve not focused on the base station modes and RTCM correction message publishing &amp; receiving as yet. My current setup is using the NTRIP client on android and publishing via Bluetooth to a receiver connected on uart2. I followed the instructions from SparkFun as I bought their device.', 'It would be a simpler setup if an NTRIP caster was in the driver with ROS2 messages. In Australia we now have access to a regional set of CORS <a href="https://www.auscors.ga.gov.au/status/" rel="noopener nofollow ugc">https://www.auscors.ga.gov.au/status/</a> hence I didn’t need to establish my own base reference station. Ideally any driver should find the closest CORS and use that.', 'How did you find handling RTCM messages?']['My setup involved getting corrections from a paid castor service provider (since rtk2go doesn’t provide coverage and availability guarantees).', 'I had a tough time with RTCM at first, it was my first time working with RTK-GPS so added terms like GGA/NMEA/RTCM2-3 on top of ublox driver dev. was a bit confusing at first. Engineering itself turned out to be quite smooth once I grasped these concepts.']['There’s a bit of a learning curve with it all. Decided to ignore NMEA and focus on UBX binary messages.', 'Is it ok to ask what you were using the Ublox-F9R for?', 'Did you use the sensor fusion and dead reckoning capabilities? And/or did you create your own Kalman Filter?']['What I can tell you is that it was an off-road application with speeds &lt; 30 km/hr. This unfortunately renders ublox-f9r calibration and usage limited so I didn’t end up using their sensor fusion after all. As for KF/EKF - we’ll probably be using robot_localization as starting point and take it further from there. What are you looking to build if I may ask?']['Vehicle data collection also with image, LiDAR and can bus data to create a map']['<a class="mention" href="/u/smac">@smac</a> after a little bit of playing around, I believe I’ve set it up … pending a pull request now']['was advised that the repo wasn’t being actively maintained', 'Just to clarify here they (at the link you provided) said it wasnt being actively developed.', 'It is being actively maintained though and the maintainer even explicitly asks you to make a PR to add this functionality if you want it.', 'Seems like the perfect place to contribute for anyone who wants to work with some ublox devices.', 'The message type generation for that ublox package is difficult to understand at first but it makes a lot of sense once you do. I’d recommend taking another stab at it since the structure that’s setup there is great for adding new messages and firmware versions.']['The package works great for Generation 8 and below devices. However Ublox has moved to a different configuration mechanism for later devices. That’s what I’ve focused on and the high precision aspects']['Piggy-backing on the announcement of <a href="https://discourse.ros.org/t/rospy2-a-cringe-worthy-ros1-like-interface-for-ros2/21067/5">rospy2</a>, I too am trying to make it easier to migrate ROS 1 Python code to ROS 2. In particular, I’ve made the new package <a href="https://github.com/DLu/tf_transformations/" rel="noopener nofollow ugc"><code>tf_transformations</code></a> to fill the hole left by the useful ROS 1 library <a href="https://github.com/ros/geometry/blob/noetic-devel/tf/src/tf/transformations.py" rel="noopener nofollow ugc"><code>transformations.py</code></a>.', 'In short, if you wrote the following in ROS 1,', 'the only change you need to your code in ROS 2 is', 'For more information about the rationale behind the library, why it wasn’t already in ROS 2, the installation procedures and more, please see the <a href="https://github.com/DLu/tf_transformations/blob/main/README.md" rel="noopener nofollow ugc">project README</a>. Note that the library is currently making its way through the buildfarm for foxy, galactic and rolling, so <a href="https://www.youtube.com/watch?v=8YjFbMbfXaQ" rel="noopener nofollow ugc">exciting things are coming soon</a>.']['A much needed effort, I think a lot of us were doing this manually in various ways.', '(Except any conversion <strong>to</strong> Euler angles. IMO we should work as a community to ban them forever or at least spam the user with a warning. <img src="https://emoji.discourse-cdn.com/twitter/sweat_smile.png?v=9" title=":sweat_smile:" class="emoji" alt=":sweat_smile:"> That also reminds me I need to update the <a href="https://github.com/Achllle/dual_quaternions_ros" rel="noopener nofollow ugc">dual quaternions ROS</a> package to support ROS2.)']['I don’t know how to explain this problems, but here it is:', 'Then i compiled it, all is working. But when i try to include it in the Gazebo model, and run it. It logs the following linker error:', 'My clue is, when i comment the code in the <code>NavigationProvider</code> which contains publishers and subscribers initialization, it’s working fine (no errors on both compile and execution). So i think it related to the <code>rosidl_typesupport_cpp</code> package as in that error logs.', 'Then i try to declare the publishers and subscribers initialization in the gazebo plugin instead of the <code>NavigationProvider</code>, amazingly, it’s working fine. But still not working on the <code>NavigationProvider</code>.', 'Then i try to use shared library, still not working.', 'Then i try many ways to fix this problem, until then i got and idea to replace the library with header only. And then it’s working fine.', 'My question is why ROS 2 cannot execute dependency’s library that contains publisher and subscription declaration? why it’s fine when the declaration is in the same package and not different package (i use header only, so it could be treated as compilation in the same package)?', 'For note, i use the same compilation process (CMakeLists) as in many projects that using ROS 2.']['<a href="https://www.ros.org/reps/rep-2004.html#v-b">REP 2004 3.v.b</a> has the recommendation that QL1 and QL2 packages <em>should be</em> registered “with a centralized list of ‘Level N’ packages, if one exists, to allow for peer review of the claim”.', 'Having looked through a few QL1 and QL2 packages and their quality declarations, I haven’t actually found any reference to such a “centralized” list.', 'Does anyone know if such a list exists already? If not, is there interest in starting one?', 'I understand the QL system is relatively new, and that 3.v.b is listed as a recommendation rather than a requirement. But I still think having such a public list would be beneficial to the community, both to give a sense of the overall maturity of ROS 2, and to potentially guide development focus towards maturing specific core packages.', 'For what it’s worth, a while back I compiled a <a href="/uploads/short-url/nTtxrXIub5yussknc4vFwhB14OP.pdf">list of ROS 2 packages from REP 2005 and their associated quality levels</a> (463.3 KB), so I have the data for such a list; I wouldn’t know where it should live though…']['I’m not aware of a list being maintained so far.', 'I would be in favor of having such a list, but only if it is automatically generated nightly from the sources.  Any manually-curated list would get out-of-date extremely quickly, and would be just one more place that we need to update when we change quality levels.', 'There’s bad news and good news about the automatic generation.  The bad news is that the QUALITY_DECLARATION.md files in the ROS 2 core are human-readable, not machine-readable.  So there are no guarantees on the format.  The good news is that, at least in the ROS 2 core, the QUALITY_DECLARATION.md files are sufficiently similar that you can parse the data out pretty quickly.  I wrote <a href="https://github.com/clalancette/walk-qds" class="inline-onebox" rel="noopener nofollow ugc">GitHub - clalancette/walk-qds</a> a while ago which will find the quality level of a package and all of its dependencies.  It works by walking a directory structure and looking for all of the QUALITY_DECLARATION.md files, then applying a regex to find a certain phrase.', 'Going forward, I think we either want to more strictly define the wording that defines the quality phrase, or define a machine-readable section in the QUALITY_DECLARATION.md that can be parsed more exactly.']['I would be in favor of having such a list, but only if it is automatically generated nightly from the sources. Any manually-curated list would get out-of-date extremely quickly, and would be just one more place that we need to update when we change quality levels.', 'I don’t 100% agree with this. If we just want a list of other packages that have a quality declaration, then this is fine, but the point of that suggestion in REP-2004 is so that we form a peer-review system (maybe an informational REP, maybe just a file in a repository that requires reviews to merge into), and importantly staying on that list cannot be automatic, because some of the requirements for quality declarations are on-going efforts, like are the change control processes being followed? is the code coverage being maintained? etc…', 'The idea was that any list would be curated and kept up-to-date, probably having a separate list for each ROS distribution.', 'Obviously this is a lot more work, but it’s (in my opinion) the only reasonable way to ensure the things on the list are actually at the quality level they declare. And if it is important enough to the community that process will be set in place and staffed, otherwise we’ll continue not to have one (which is ok I think until people actually want/need it).', 'But either way, that’s the intent of 3.v.b in REP-2004, not just to index the packages with a QD.']['I wrote <a href="https://github.com/clalancette/walk-qds" rel="noopener nofollow ugc">GitHub - clalancette/walk-qds</a> a while ago which will find the quality level of a package and all of its dependencies. It works by walking a directory structure and looking for all of the QUALITY_DECLARATION.md files, then applying a regex to find a certain phrase.', 'I had done the same, and had noticed that all of the existing declarations were consistent in the quality level declaration line, for what its worth. But I agree that this could be tricky in the future and may warrant some stricter formatting.', 'but the point of that suggestion in REP-2004 is so that we form a peer-review system (maybe an informational REP, maybe just a file in a repository that requires reviews to merge into), and importantly staying on that list cannot be automatic, because some of the requirements for quality declarations are on-going efforts, like are the change control processes being followed', 'I also agree that the intent should be to have some peer-oversight… but perhaps as an intermediate solution, there is room for a middle ground approach? E.g. maintaining a list with three columns: package name, declared quality level, and “verified” quality level. The declared quality level could be auto-populated, for a low-effort quick reference for the community, and the “verified” quality level could require manual review whenever the declared level doesn’t match the verified level.']['but perhaps as an intermediate solution, there is room for a middle ground approach? E.g. maintaining a list with three columns: package name, declared quality level, and “verified” quality level.', 'Yeah, that would be useful and could be automated I think.', 'The verified column would need to draw from some list of packages that were reviewed, so that could be the “just a file in a repository that requires reviews to merge into” that I mentioned, like a json file or something, but I still think it shouldn’t be a persistent honor. At the very least it should be re-evaluated each ROS release.', 'This is again more work (which we generally try to avoid), but if a package is to maintain quality but the effort the cannot be found to review its QD, then it seems unlikely to meet the other goals, to be honest.']['Hi everyone,', 'Just wanted to let everyone know that I just released a package from my PhD work for Deep Reinforcement Learning using TensorFlow 2.0 and ROS2 Foxy. This package takes advantage of ROS2’s DDS for both synchronous and asynchronous distributed training. It can also be used for one or more robots within an environment.', 'In this package, you define the networks and what constitutes a step within your environment. This package is more of a <em>template</em> than an actual package since things are left empty for users to actually use. This package includes popular Deep RL algorithms such as:', 'I will be releasing a Proximal Policy Optimization implementation soon, so please let me know what you think and drop an issue or pull request if you would like to contribute! Credit to my wife, Amanda, for the cute robot trainer picture!', 'Deep RL ROS2 package for synchronous or asynchronous training a single or multiple robots. - zmk5/multi_robot_trainer']['Hi all, friendly neighborhood navigator here.', 'I got an interesting PM this morning asking me how they could jump in on porting ROS2 packages. I realized “wow, I don’t actually have a list going of things we need ported.” Sure I can look at the ROS1 packages and cross reference them to the ROS2 list, but not all packages are worth porting or have enough re-use to make it an important dependency.', 'So lets change that, shall we? In this survey, please fill in with ROS 1 packages <strong>without an initial port</strong> that you need to have made available in ROS 2 to make the transition. Do not list packages with initial ROS 2 ports but not yet released, please directly contact maintainers about doing a release.', 'Also in the same survey, I ask if you yourself are interested in helping to port packages and would like me to reach out to try to help arrange it. You’re obviously very welcome to go off porting things yourself without me (please do that if you can). The packages with more responses from unique users are more important to port as they block many users.', 'While this survey asks for a GitHub handle, you are not required to provide one if you aren’t comfortable with having your name and request in the public responses. However, if I start seeing misuse, I will make a judgement call and delete your entries and reinstate a required identification field. If we all are honest citizens of the world, we’ll have no problems.', 'You may fill in the form as many times for as many packages you think are important. The results are available publicly below. <strong>If you are interested in porting packages, please reference this list for potential ideas.</strong> Please contact me if you need some help selecting a package to work on or a maintainer is not responsive, you can mention me by my github handle <span class="mention">@stevemacenski</span>. If you complete a port, ping me and I’ll strike out those entries from the document to let users know its been completed.']['And as always, if you’re interested in Navigation, ROS2, mobile robotics, or similar, join us in the navigation slack group: <a href="https://join.slack.com/t/navigation2/shared_invite/zt-g00k4xwx-~ABwlU1rwHU96OGihC0ESA">https://join.slack.com/t/navigation2/shared_invite/zt-g00k4xwx-~ABwlU1rwHU96OGihC0ESA</a>. Introduce yourself on the <span class="hashtag">#onboarding</span> channel and lets work on some cool stuff!']['Keep me posted on how this goes. Perhaps if we get to a critical mass we could put together some sort of distributed community hack day.']['<a class="mention" href="/u/smac">@smac</a>', 'This is great survey, thanks for taking care of this <img src="https://emoji.discourse-cdn.com/twitter/smile.png?v=9" title=":smile:" class="emoji" alt=":smile:"> How long is this open? I guess I need some time to ask around.']['I don’t think of this as an ‘ending’ thing, I think this could potentially be pinned and I would hope that people would continuously update it (and help clear them by helping port) until we run out of sufficiently important packages to evaluate and port. This is about creating transparency in the process of porting (what’s missing?) and an actionable list for bored developers, open source people, or companies needing these packages for their own needs to step in.']['<a class="mention" href="/u/smac">@smac</a> Congratulations it’s an amazing initiative']['I am not able to login using my gmail. Can you please send me an email invitation?']['<a class="mention" href="/u/evancc">@evancc</a> PM me with your email']['We’re happy to announce 12 updated packages for Kinetic.', 'Thank you to the maintainers and contributors who have helped made these packages available!', 'Full details are below.', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['We’re happy to announce new packages and updates for Foxy Fitzroy!', '<code>realsense_msgs</code> was removed as the other packages in the repository had not successfully built since their inclusion in Foxy (<a href="https://github.com/ros/rosdistro/pull/25814" rel="nofollow noopener">related GitHub ticket</a>).', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['I forgot to mention this sync includes patches to <code>rmw_fastrtps</code> and <code>rmw_cyclonedds</code> that improves the reliability of ROS services:']['We’re happy to announce 5 new packages and 46 updated packages for Kinetic Kame.', 'Thank you to all the maintainers and contributors who have helped make this possible!', 'Full details are below.', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['We’re happy to announce 7 new packages and 44 updated packages for Kinetic.', 'Thank you to all the maintainers and contributors who have helped make these updates possible. Full details are below.', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['We’re happy to announce 53 new packages and 105 updated packages for Eloquent Elusor this week.', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['<a href="https://discourse.ros.org/t/proposed-edge-ai-wg/12011">Edge AI WG</a> is putting together a list of packages that use ML. (fyi draft list of <a href="https://github.com/ros-infrastructure/rep/blob/dirk-thomas/rep2005-standard-library/rep-2005.rst" rel="nofollow noopener">ros2 standard libraries</a>). please add ros2 packages that use ML or HW acceleration.', 'We want to build / improve ML capabilities in ROS. Impression is there is not yet much ML in mainstream ROS. Seems there are many prototypes and demos, not much that is core.']['Are you asking people to contribute to a list on discourse or in the standard library REP? If it is for the REP I would assume you are looking for tools/libraries that are generically useful rather than application specific tools (e.g. license plate readers). Is this assumption correct?']['for now just making an informal list on discourse. <a class="mention" href="/u/smac">@smac</a> had suggested discourse might be more accessible for early discussion, happy to move to GitHub list as things progress. I assume tools/libraries that re generically useful, though even application specific tools  (e.g. license plate readers) are interesting.']['Are you asking people to contribute to a list on discourse or in the standard library REP?', 'I agree that’s unclear. There’s definitely no ML in that list.']['Here are some ROS 2 packages I know about ML.', 'ROS2 nodes for computer vision tasks in Tensorflow - alsora/ros2-tensorflow', 'YOLO ROS: Real-Time Object Detection for ROS. Contribute to leggedrobotics/darknet_ros development by creating an account on GitHub.', 'Hope this can help.'][]['Some ROS2 packages for REL I checkout some time ago:']['Thank you for the interest in my package <a href="https://github.com/alsora/ros2-tensorflow" rel="nofollow noopener">ros2-tensorflow</a>.', 'I wanted to let you know that  I updated the package, such that it works with:', 'The  dockerfile has been updated as well, so you can use it to get a system with all the dependencies.', 'Unfortunately, there are some bugs in ros2 eloquent related to displaying images: images from the <code>cam2image</code> node will not be rendered in rviz (fix here maybe? <a href="https://github.com/ros2/demos/pull/433" rel="nofollow noopener">https://github.com/ros2/demos/pull/433</a>) and in <code>rviz</code> if you try to resize the image display, rviz will crash (fix here <a href="https://github.com/ros2/rviz/issues/486" rel="nofollow noopener">https://github.com/ros2/rviz/issues/486</a>)', 'If you are interested in my package and you have issues while using it, don’t hesitate to open a ticket on github']['<a href="https://github.com/tradr-project/tensorflow_ros_cpp" rel="nofollow noopener">https://github.com/tradr-project/tensorflow_ros_cpp</a> is only a ROS 1 package, but it brings complex support for various types of installations of Tensorflow and enables using its C++ API with ROS. I think porting it for ROS 2 users, and to support Tensorflow 2, could also help.']['We’re happy to announce one new package and 87 updated packages for Kinetic.', 'Thank you to all the maintainers and contributors!', 'Details are below.', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['We’re happy to announce 7 new packages and 191 updated packages for Kinetic Kame.', 'Thank you to all the maintainers and contributors who helped make these packages available to toe community!', 'A full listing is below.', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['We have 2 new packages and 50 updated packages available for Kinetic Kame.', 'Thank you to all the maintainers and contributors who have helped make these packages and updates available!', 'A full listing is below.', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['We’re happy to announce 4 new packages and 37 update for Kinetic.', 'Thank you to everyone who helped make this possible, including the maintainers and all the contributors. Full details are below.', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['Hi I have a question regarding the ROS2 license. It is my understanding that the components that make up ROS2 are all under the Apache 2.0 license.']['Thanks for your question. However we ask that you not double post questions following our support guidelines: <a href="http://wiki.ros.org/Support">http://wiki.ros.org/Support</a>', 'For others reference there’s already a thread at: <a href="https://answers.ros.org/question/341661/is-redistributing-ros2-allowed/">https://answers.ros.org/question/341661/is-redistributing-ros2-allowed/</a>', 'ROS Discourse is for news and general interest discussions. <a href="http://answers.ros.org">ROS Answers</a> provides a Q&amp;A site which can be filtered by tags to make sure the relevant people can find and/or answer the question, and not overload everyone with hundreds of posts.'][]['To answer the specific question about <code>pip</code>:', 'You already use <code>pip</code> to install pure Python ROS packages by simply passing the git url.', 'If you are referring to release the Python packages to <code>PyPI</code> then I would say this is not a license question but if it is desired. The maintainers have intentionally not released ROS package to <code>PyPI</code>. So I don’t think you should do that without an explicit “ok” of each packages maintainer.']['Digging into new Python code can be a pain, especially for those used to statically typed languages.', 'Python 3.5 added support for a type annotation system, described in <a href="https://www.python.org/dev/peps/pep-0484/" rel="nofollow noopener">PEP 484</a>. Python 3.6+ expands this with individual variable annotations (<a href="https://www.python.org/dev/peps/pep-0526/" rel="nofollow noopener">PEP 526</a>). While purely decorative and optional, a tool like mypy can use it to perform static type analysis and catch errors, just like compilers and linters for statically typed languages.', 'Using it requires a bit of a guarantee from other contributors that they’ll maintain this optional feature, and any gaps in coverage will cause errors to appear for later mypy users, or even worse, errors to <strong>not</strong> appear as datatypes fall back to  <code>Any</code>.', 'To make sure that packages that are type checked remain so and remove the burden of manually running mypy before and after each contribution, we’ve created an ament_lint plugin <a href="https://github.com/ament/ament_lint/tree/master/ament_mypy" rel="nofollow noopener">for it</a>.', 'For detailed information about how to use it, check out our <a href="https://ubuntu.com/blog/linting-ros-2-packages-with-mypy" rel="nofollow noopener">blog post</a> on integrating it with your package’s testing pipeline! We’ll also be documenting the process of writing a an <code>ament_lint</code> plugin in an upcoming blog post.']['I am working on a project so require UR5 package.']['Wow! I’m a intense user of ur5-ROS too, add I have plan to add some features for the package as well. Glad to know this is another guy owns the same idea with me <img src="https://emoji.discourse-cdn.com/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">', 'I think we may contact the maintainer of <a href="https://github.com/ros-industrial/universal_robot" rel="nofollow noopener">https://github.com/ros-industrial/universal_robot</a> and talk more about it after get reply?']['<a class="mention" href="/u/i_robot.1">@I_robot.1</a> and <a class="mention" href="/u/jianghao_huo">@Jianghao_Huo</a> It’s great that you’re using the UR-5 driver and would like to extend it to add new features.', 'To contribute you don’t need to be a maintainer. Maintainership is a responsibility that is curated and generally handed off to an active contributor who has demonstrated support and commitment to a package. We have a small blurb about it <a href="https://www.ros.org/contribute/">here</a>.', 'For you to get involved, you can submit PR to the repository that other contributors and the maintainers will review and give you feedback on before integrating it into the repository. If you need some guidance or other feedback before you get started please open an issue on the appropriate repository with  your proposed change with as much details as you can provide and any questions you might have as to how to implement it or make it suitable for contribution.', 'There’s also lots of guides online for how to make effective contributions to open source projects. There’s so many that I can’t recommend a specific one as different ones connect better with different people. Please take a read through a couple that look the most informative to you. I look forward to seeing your contributions!']['Thanks to the work of <a class="mention" href="/u/klintan">@klintan</a>, I’m pleased to announce that <code>nmea_msgs</code> has been packaged for ROS 2 Crystal and Dashing! <code>nmea_navsat_driver</code> will be following soon. (There’s already a <code>ros2</code> branch <a href="https://github.com/ros-drivers/nmea_navsat_driver/tree/ros2" rel="nofollow noopener">up on GitHub</a>, but I haven’t finished cleaning it up and blooming it.)']['Hi everyone!', 'Just as an FYI, in order to integrate Apex.AI <a href="https://github.com/ros2/launch/issues/208" rel="nofollow noopener">contributions to launch testing</a>, and to enable its use in lower layers of the ROS 2 stack, ROS specific packages are being moved out of the ros2/launch repository and into the brand new ros2/launch_ros repository.', 'If you’re maintaining a source checkout for development on <code>master</code>, please update your workspace using the latest <a href="https://github.com/ros2/ros2/blob/master/ros2.repos" rel="nofollow noopener">ros2.repos</a> file.']['Thanks for the heads up, <a class="mention" href="/u/hidmic">@hidmic</a>. You say the packages “are being moved,” but are they in fact already moved, and thus using the latest ros2.repos file as of now will get the rename?']['<a class="mention" href="/u/kyrofa">@kyrofa</a> just moved with <a href="https://github.com/ros2/launch/pull/211" rel="nofollow noopener">https://github.com/ros2/launch/pull/211</a> and <a href="https://github.com/ros2/launch_ros/pull/1" rel="nofollow noopener">https://github.com/ros2/launch_ros/pull/1</a>, and yes, using the latest ros2.repos will get the rename.']['Hi all <img src="https://emoji.discourse-cdn.com/twitter/wave.png?v=6" title=":wave:" class="emoji" alt=":wave:">', 'There’s been some discussion about adding <a href="https://clang.llvm.org/docs/ThreadSafetyAnalysis.html" rel="nofollow noopener">clang’s compile time thread safety analysis</a> for ROS2 core packages, to help us find mistakes automatically and early on. I’ve talked to <a class="mention" href="/u/tfoote">@tfoote</a> and <a class="mention" href="/u/thomas_moulard">@Thomas_Moulard</a> about this a bit offline, we wanted to move it into a public forum before moving further.', 'The thread safety features are enabled by some annotations that are best used by macros that can be turned off when using non-clang compilers (see <a href="https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#mutex-h" rel="nofollow noopener">mutex.h</a> in the clang doc page), as a general utility. The first question is, where should these be defined?', 'Given that, I personally think creating a new <code>rcpputils</code> package makes the most sense. It hasn’t been needed yet but could make sense now given we have something that would fit there.', 'In terms of using these annotations, we have a <a href="https://discourse.ros.org/t/ci-ros2-org-clang-nightly-job-now-available/7857" class="inline-onebox">Ci.ros2.org clang nightly job now available</a> that could raise thread safety warnings for annotated code, at least in the nightly build.', 'For usage and roll-out, the <code>rmw</code> packages are prime candidates for first packages to start using the annotations, since they are highly threaded code. The thinking on guidelines', 'I’ve put together a proof of concept in <code>rmw_fastrtps</code> to illustrate', 'Before changing anything, want to hear thoughts on 1) where the macros should live, whether we should create that new package, and 2) usage patterns as put together in that WIP commit']['How does the analysis handle threads that are not annotated? For example, threads inside the DDS implementation.', 'I noticed in your proof of concept that there are places where locks have been added and places where they have been removed. Is this for the analysis or because the analysis found errors?']['How does the analysis handle threads that are not annotated? For example, threads inside the DDS implementation.', 'Anything not annotated doesn’t get analyzed. The llvm libcxx implementation has the Capability annotations on its <code>std::mutex</code> implementation, but if you don’t mark any data as <code>GUARDED_BY</code> the mutex, the analysis has nothing to operate on', 'I noticed in your proof of concept that there are places where locks have been added and places where they have been removed. Is this for the analysis or because the analysis found errors?', 'I kept all existing locking logic intact but shifted ownership of the locking around - The main difference is that in favor of a private mutex ownership patterm, I removed the “lock-wrapper” LockedObject pattern, because it spread out locking and safety in such a way that it would be easy to make more mistakes, spreads ownership of safety to any user of the data, instead of centralizing in the thread-accessed data. That may not be the way we want to go, it’s just what seems to make the most sense to me']['Anything not annotated doesn’t get analyzed. The llvm libcxx implementation has the Capability annotations on its <code>std::mutex</code> implementation, but if you don’t mark any data as <code>GUARDED_BY</code> the mutex, the analysis has nothing to operate on', 'Yep, that makes sense. What I’m wondering is does this have any impact on the analysis of threads that are annotated? If an annotated thread interacts with a non-annotated one, how trustworthy are the analysis results?']['I kept all existing locking logic intact but shifted ownership of the locking around - The main difference is that in favor of a private mutex ownership patterm, I removed the “lock-wrapper” LockedObject pattern, because it spread out locking and safety in such a way that it would be easy to make more mistakes, spreads ownership of safety to any user of the data, instead of centralizing in the thread-accessed data. That may not be the way we want to go, it’s just what seems to make the most sense to me', 'I haven’t looked at the details, but what you say makes sense from a maintainability point of view.']['Yep, that makes sense. What I’m wondering is does this have any impact on the analysis of threads that are annotated? If an annotated thread interacts with a non-annotated one, how trustworthy are the analysis results?', 'Good question - the way I understand it the annotations are more about data than the threads themselves - so if you annotate data as being guarded, the analysis will spit out warnings for other code/packages only if it is built with <code>-Wthread-safety</code>, and accesses that data unsafely (according to the the analysis rules). So we could keep “non-ported” code warning-free by not enabling that flag on it until it’s been looked at specifically.']['OK, that makes sense to me. Thanks for the clarifications!']['Proposal for phasing/staging moving forward on this:']['<a class="mention" href="/u/emersonknapp">@emersonknapp</a> Thanks for your complete and well thought out proposal. Hopefully this can be a good example for others going forward.', 'Overall we have general support for a utility package with a scope like <code>rcpputils</code> in parallel with <code>rcutils</code> here. There are several utility functions in rclcpp that could be refactored out into this package too in the future.', 'There was some discussion about whether there might be another more generic package scope. But there wasn’t any strong alternative proposals so lets go ahead with this as proposed.']['<a class="mention" href="/u/tfoote">@tfoote</a> what’s the process for creating the new repo? I have a take at a an empty package on my account, with a PR against it adding the macros', 'Contribute to emersonknapp/rcpputils development by creating an account on GitHub.', 'But I realized I can’t transfer ownership to ros2 because I don’t have permissions to create repos in the org. Advice?']['Moving into an organization is a bit of a challenge. The most common thing to do is to transfer it to one of the individuals who has access and then they transfer it into the organization. Luckily github is relatively good about setting up redirects so most people won’t notice the indirect path.', 'If you can transfer it to me, I can then transfer it to the organization.']['Great! Done, thanks!', 'Another thought, it seems  a little unwieldy to add this block to the <code>CMakeLists.txt</code> for every package that wants to use this analysis', 'Would there be a better way to either', '<a class="mention" href="/u/thomas_moulard">@Thomas_Moulard</a> maybe you have thoughts on this?']['We have two ways IMHO:', 'My feeling is that, keeping this opt-in per-package will be challenging because mixing the clang and GNU standard libraries is probably unsafe. So it would need to be a global on/off flag. 2. is most likely too brutal of a change so 1. could be the best option.']['I’ve hit a wall with enabling this - given the following constraint', 'High level problem -', 'Specific example case that I ran into -', 'Workarounds I’ve tried:', 'In conclusion, here are a list of options I have come up with to move forward (I am also very open to other suggestions)', '<a class="mention" href="/u/tfoote">@tfoote</a> thoughts?', 'I think this analysis is valuable, but it’s definitely got its technical hangups here', '<a class="mention" href="/u/thomas_moulard">@Thomas_Moulard</a>']['Should the analysis always be run for best results, or can we limit it to a CI run? If the latter, then perhaps we can set up a separate CI run that builds everything from source using <code>libc++</code> and run that once a day or something, rather than making it part of every CI build.']['That sounds like the commonly used approach for this.', 'In general the same applies when mixing libraries built with different C++ compilers, e.g. g++ vs. clang. While you might be lucky this is not something guaranteed.']['Should the analysis always be run for best results, or can we limit it to a CI run?', 'I think that we gain value by running at all. Though it would be nice to run for every build, it seems prohibitively expensive given the current situation - we’re only running a Clang build nightly today as it is.', 'Based on <a class="mention" href="/u/dirk-thomas">@dirk-thomas</a> input, my thinking now is to get all code building from source in the nightly Clang build and force that build to use <code>libc++</code>']['As we talked offline, I would do as follow:']['Hi guys <img src="https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:">', 'This release only support <code>Burger</code> yet, but we are going to update that packages to support <code>Waffle Pi</code> after few days later.', '[Github repo]', '[Issue page]', '[E-Manual]']['Please consider to release your packages using <code>bloom</code> in order to provide Debian packages for users so that they don’t have to build the packages from source.']['I want to thank <a class="mention" href="/u/routiful">@routiful</a> for the great work he did here! I was working on this from the Navigation2 side and bugged him many times for help and updates, and he patiently helped me and worked through the issues to get it working! Thank you!']['<a class="mention" href="/u/dirk-thomas">@dirk-thomas</a> Of course, we have plan to release tb3 packages <img src="https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:">']['<a class="mention" href="/u/mkhansen">@mkhansen</a> Thank you for your kind comment <img src="https://emoji.discourse-cdn.com/twitter/grin.png?v=6" title=":grin:" class="emoji" alt=":grin:"> Navigation2 and your team makes me driven to focus that packages. Thank you again and let’s make more greatness!']['Hi <a class="mention" href="/u/dirk-thomas">@dirk-thomas</a>, I am preparing to release the TurtleBot3 packages using bloom in order to provide Debian packages for users. Fortunately, the way to register with <a href="https://github.com/ros/rosdistro" rel="nofollow noopener">rosdistro</a> is the same as before. One thing I’m curious about is that I have used <a href="https://github.com/ros-industrial/industrial_ci.git" rel="nofollow noopener">industrial_ci</a>, but ros2 does not seem to be able to use it. What should I use instead of this? I want to hear your advice. Thanks. <img src="https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:">']['<a class="mention" href="/u/pyo">@Pyo</a> Please post any follow up conversation to a different place since this category is only intended for announcements etc. and reaches too many people. Either to the <a href="https://discourse.ros.org/c/ng-ros">Next Generation ROS</a> category or <a href="http://answers.ros.org">answers.ros.org</a>.', 'One thing I’m curious about is that I have used <a href="https://github.com/ros-industrial/industrial_ci.git" rel="nofollow noopener">industrial_ci</a>, but ros2 does not seem to be able to use it.', 'I guess the right statement would be: <code>industrial_ci</code> doesn’t support ROS 2 (rather than the other way around).', 'What should I use instead of this?', 'The official ROS buildfarm has the same capabilities for <a href="http://build.ros2.org/" rel="nofollow noopener">ROS 2</a> as for <a href="http://build.ros.org/">ROS 1</a>. When releasing your repositories you should make sure to:', 'If you don’t want to leverage the official ROS buildfarm you can still use the logic provided by the package which powers it by using the scripts locally or withing a CI provider like Travis: see the <a href="https://github.com/ros-infrastructure/ros_buildfarm/blob/master/doc/jobs/devel_jobs.rst#run-the-devel-job-on-travis" rel="nofollow noopener">docs</a> for more information about that.', 'I am not aware which of the other <a href="http://wiki.ros.org/CIs">CI approaches</a> support ROS 2 atm.', 'Cheers,']['Hello all,', 'I have yet to see a mixed python/cpp ament package. Does anyone have an example or documentation to point to?', 'Thanks.']['<code>catkin</code> provided a CMake function to introspect a <code>setup.py</code> and for a subset of the possible content do “the right thing”.', 'In ament the package <code>ament_cmake_python</code> provides two functions:', 'Those should cover the major need to install Python packages or individual modules. At the moment there is no support for additional features provided by setuptools like entry points.']['How would a <code>cpp</code> file be integrated into a pakage within the <code>setup.py</code>? Would it be defined as an external module?']['Python packages with a <code>setup.py</code> file are processed in a standard way. So you can do whatever you like in there which works for <code>python setup.py install</code>, e.g. <a href="https://docs.python.org/3/distutils/setupscript.html#extension-source-files">C++ extensions</a>.']['That works if my cpp file is not a ros2 node and a generic cpp file. But if it were to be a ros2 node, how would I define that in my <a href="http://setup.py" rel="nofollow noopener">setup.py</a>? Is there a way to do this?']['We have never tried that. CMake and <code>ament_cmake</code> provide a lot of features to handle dependencies and build libraries and executables from C++ code. I would assume it is a lot of effort trying to mimic this within a <code>setup.py</code> file.', 'Maybe the other way around makes more sense: using more Python specific features by calling out to Python from CMake.']['Does that mean including ament_python in the CMakeLists.txt file and compiling my python node?', 'If I were to do this, how would I go about it? It’d be really helpful if you could give me a general sense of direction…']['We don’t have many examples of this but I think rclpy[1] can give you an idea. It is an <code>ament_cmake</code> package[2] that compiles C code into a library and install it[3]. I also installs python modules[4] for the user to interact with. The difference here is that the libraries are installed in the python install directories (because they are python extensions) but you can install them where C++ libraries should go.', 'Hope this helps']['Okay, this is what I have right now. My package has the following structure -', 'My CMakeLists.txt looks like this -']['It looks like you’re mixing CMake (you have a <code>CMakeLists.txt</code>) and Python’s setuptools (you have a full <code>setup.py</code> file as well). Our build tool doesn’t support dual build system packages like this. When building your package it will either run <code>cmake</code> or <code>python setup.py ...</code> but not both.', 'If you need both then another solution will need to be found. Perhaps calling the <code>setup.py</code> from the <code>CMakeLists.txt</code> or replacing the functionality of the <code>setup.py</code> with just cmake code or replacing the functionality of the CMake code within <code>setup.py</code> using <a href="https://docs.python.org/3/distutils/setupscript.html#extension-source-files">C++ Extensions</a>, which <a class="mention" href="/u/dirk-thomas">@dirk-thomas</a> linked to before.', 'We don’t currently have such an example as you’ve setup here. Specifically something that contains non-trivial CMake code (which would not easily be replicated with Python’s C++ Extensions) as well as a <code>setup.py</code> file which uses <code>entry_points</code> . Unfortunately, all I can say is that we don’t have a solution for this yet and I don’t know what the best strategy forward is at the moment.']['Ah okay. Thanks. I will try experimenting a little on my own and see if I can come up with something. If I’m successful I can create a new post and share my experience.', 'As suggested by <a class="mention" href="/u/dirk-thomas">@dirk-thomas</a>, using <code>CMake</code> to call the <code>setup.py</code> would be the easier option. Is there any resources that you’d be aware of that could help me to proceed in this direction?']['The closest thing I know of is how catkin from ROS 1 combines CMake and Python:']['<a class="mention" href="/u/srsidd">@srsidd</a>, did you make any progress with this? I’m struggling with the same issue right now.']['Just chiming in to say I also have the same package layload as <a class="mention" href="/u/srsidd">@srsidd</a> exemplified above, and would also be interested in how to get around this.', 'We don’t currently have such an example as you’ve setup here. Specifically something that contains non-trivial CMake code (which would not easily be replicated with Python’s C++ Extensions) as well as a <code>setup.py</code> file which uses <code>entry_points</code> . Unfortunately, all I can say is that we don’t have a solution for this yet and I don’t know what the best strategy forward is at the moment.', 'Wrt. ros2 packages using both C++ and Python with CMake and <code>entry_points</code>, is this still the case?']['Wrt. ros2 packages using both C++ and Python with CMake and <code>entry_points</code> , is this still the case?', 'Nobody has worked on that and afaik nobody is planning to do so. So the state is still the same.']['Hi everyone,', 'The ROS 2 team is preparing for the Crystal Clemmys release and we’d like to invite you to help us by testing out the pre-release or releasing your own packages to Crystal.', 'ROS 2 is available with multiple RMW implementations on multiple platforms and architectures. Depending on your system configuration, you can help us out by doing any of the following:', '<a href="https://index.ros.org/doc/ros2/Installation/#building-from-source">Build ROS 2 Crystal from source</a> on your preferred platform. Be sure to use the <code>master</code> branch version of the repos file (described <a href="https://index.ros.org/doc/ros2/Linux-Development-Setup/#get-ros-2-0-code">here</a>) as Crystal is still in pre-release.', 'Install and use the <a href="https://index.ros.org/doc/ros2/Installation/#binary-packages">binary archives</a> available for MacOS Sierra, Windows 10, Ubuntu 18.04 Bionic, or Ubuntu 16.04 Xenial. Use <a href="https://github.com/ros2/ros2/releases/tag/prerelease-crystal-2018-12-08" rel="nofollow noopener">this link</a> for the archive downloads instead of the latest production release.', '<a href="https://index.ros.org/doc/ros2/Linux-Install-Debians/">Install and use the ROS 2 Ubuntu Bionic packages</a> as they become available. (<a href="http://repo.ros2.org/status_page/ros_crystal_default.html" rel="nofollow noopener">AMD64 status</a>, <a href="http://repo.ros2.org/status_page/ros_crystal_ubv8.html" rel="nofollow noopener">ARM64 status</a>)', 'Follow the ROS 2 <a href="https://index.ros.org/doc/ros2/Tutorials/">tutorials</a> with one or more different RMW implementations.', 'Run some <a href="https://github.com/ros2/examples" rel="nofollow noopener">examples</a> and <a href="https://github.com/ros2/demos" rel="nofollow noopener">demos</a>.', 'After testing, reply back here to let us know what worked and what didn’t work, along with what platform you’re on and how you installed ROS 2.', 'If you run into problems, all the usual recommendations apply. You can ask questions on <a href="https://answers.ros.org">https://answers.ros.org</a> with the <code>crystal</code> tag or report issues on <a href="https://github.com/ros2/ros2" rel="nofollow noopener">https://github.com/ros2/ros2</a> or the relevant package repository. Be sure to follow the contributing guidelines and issue templates.', 'If you maintain a package you would like to release in ROS 2 Crystal we encourage you to do so by following the <a href="https://index.ros.org/doc/ros2/Releasing-a-ROS-2-package-with-bloom/">guide to releasing a ROS 2 package with bloom</a>.']['I just installed ROS 2 Crystal from sources on Ubuntu 18.04.', 'Everything went fine, but I would like to make a couple comments on the instructions:', 'In the <code>Install development tools and Ros tools</code> section <a href="https://index.ros.org/doc/ros2/Linux-Development-Setup/#install-development-tools-and-ros-tools">link</a> it looks like the pytest dependencies are needed only on Ubuntu 16.04. I’m on Ubuntu 18.04 and without them the build process prompted a lot of warnings about <code>pytest</code> missing and then failed while building the demos package.'][]['And then add the repository to your sources list:', 'I’m curious why you suggest setting up multi-arch sources right out of the gate? I can’t imagine that will often work well unless the rest of the sources are also setup to be multi-arch, which isn’t discussed there. Even then, why suggest it by default?']['Updated in <a href="https://github.com/ros2/ros2_documentation/pull/45" rel="nofollow noopener">https://github.com/ros2/ros2_documentation/pull/45</a>. Thanks!']['In the <code>Install development tools and Ros tools</code> section <a href="https://index.ros.org/doc/ros2/Linux-Development-Setup/#install-development-tools-and-ros-tools">link </a> it looks like the pytest dependencies are needed only on Ubuntu 16.04. I’m on Ubuntu 18.04 and without them the build process prompted a lot of warnings about <code>pytest</code> missing and then failed while building the demos package.', 'Would you mind <a href="https://github.com/ros2/ros2_documentation/issues" rel="nofollow noopener">opening an issue</a> on the source repository for that documentation. I’ve tested the instructions and most of the pytest related packages are pulled in as dependencies of colcon on 18.04. Thanks']['I’m curious why you suggest setting up multi-arch sources right out of the gate? I can’t imagine that will often work well unless the rest of the sources are also setup to be multi-arch, which isn’t discussed there. Even then, why suggest it by default?', 'I can’t find the commit history but I think this was done as a quick way to detail what architectures are available. I’d review a PR to change the default repository link.']['I do not see an issue with that as long as all packages are built for both architectures. You can easily extend this to <code>deb [arch=amd64]</code> and <code>deb [arch=arm64]</code> later if package sets diverge. But as long as this does not happen, it’s easier to just maintain a single repo line in the documentation.']['Is there a wiki page for Crystal Migration Notes (<a href="http://wiki.ros.org/melodic/Migration">as we have in ROS1</a>)? In particular, I would like to help document the <a href="https://github.com/ros2/geometry2/pull/67#issuecomment-447417811" rel="nofollow noopener"><code>tf2_ros::Buffer</code> API change to use ROS2 Time</a>.']['I think package-specific migration notes could go into the package’s README (which will also be rendered by <a href="http://index.ros.org">index.ros.org</a>) or another place where the package’s documentation lives.', 'If it will affect a lot of people, maybe it can go into <a href="https://index.ros.org/doc/ros2/Release-Crystal-Clemmys/#changes-since-the-bouncy-release">https://index.ros.org/doc/ros2/Release-Crystal-Clemmys/#changes-since-the-bouncy-release</a> ?']['Thank you for the link. Anyone using <code>tf2_ros::TransformListeners</code> or <code>tf2_ros::Buffers</code> programmatically will need to update their code to add in a ROS2 Clock (it won’t compile without a change in Crystal). As this is a core piece of ROS, I think it warrants an entry to the changes list.']["Huh. Am I weird for expecting colcon to be available after installing ros-crystal-ros-base? I had to install python3-colcon-ros manually. I don’t see that documented anywhere, but perhaps I glossed over it. Just <code>apt-cache search</code>'d and installed the thing that seemed to make sense.", '<strong>Update</strong>: there’s also no <code>--packages-select</code> option supported in the colcon that I installed. This option is suggested in the “tips” section of <a href="https://index.ros.org/doc/ros2/Colcon-Tutorial/">the colcon tutorial</a> as well as <a href="https://colcon.readthedocs.io/en/released/migration/catkin_make_isolated.html" rel="nofollow noopener">readthedocs</a> for colcon. Am I missing something obvious?', '<strong>Update 2</strong>: Oh wow, I needed to install python3-colcon-common-extensions, which I found after reading the build-from-source doc. Definitely feel like that should have been handled for me by installing ros-base, or some sort of colcon metapackage at least (perhaps simply called <code>python3-colcon</code>?).']["Huh. Am I weird for expecting colcon to be available after installing ros-crystal-ros-base? I had to install python3-colcon-ros manually. I don’t see that documented anywhere, but perhaps I glossed over it. Just <code>apt-cache search</code>'d and installed the thing that seemed to make sense."]["Huh. Am I weird for expecting colcon to be available after installing ros-crystal-ros-base? I had to install python3-colcon-ros manually. I don’t see that documented anywhere, but perhaps I glossed over it. Just <code>apt-cache search</code> 'd and installed the thing that seemed to make sense.", 'None of the packages in ROS 2 have a dependency on the colcon build tool. This is sort of nice since production systems don’t necessarily need build tools so ROS 2 is one step closer to minimal production environments if the functionality to split out development info from runtime libraries is contributed.', '<strong>Update</strong> : there’s also no <code>--packages-select</code> option supported in the colcon that I installed. This option is suggested in the “tips” section of <a href="https://index.ros.org/doc/ros2/Colcon-Tutorial/">the colcon tutorial</a> as well as <a href="https://colcon.readthedocs.io/en/released/migration/catkin_make_isolated.html" rel="nofollow noopener">readthedocs</a> for colcon. Am I missing something obvious?', 'The <a href="https://github.com/ros2/ros2_documentation/blob/master/Linux-Development-Setup.rst#install-development-tools-and-ros-tools" rel="nofollow noopener">Linux development instructions</a> cover the colcon package installation with <code>python3-colcon-common-extensions</code>. The package name isn’t my favorite. (My preferred color of the bikeshed is <code>colcon-sensible</code> <img src="https://emoji.discourse-cdn.com/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:">) but because colcon is primarily implemented via plugins to the core colcon package and usable beyond the ROS ecoystem, the <a href="https://github.com/colcon/colcon-ros" rel="nofollow noopener">colcon-ros</a> package includes only the packages needed to build ROS packages and not any of the creature comfort plugins that you might also want. Hence colcon-common-extensions to wrap them both.', 'Definitely feel like that should have been handled for me by installing ros-base, or some sort of colcon metapackage at least (perhaps simply called <code>python3-colcon</code> ?).', 'I don’t agree that colcon or any tools needed only at build time ought to be in <code>ros-base</code>. But I also see where the suggestion is coming from and I think a <code>base-devel</code>- or <code>build-essential</code>-like metapackage which could include everything necessary to build <code>ros-base</code> from source is a reasonable metapackage to propose. As well as the inclusion of said package in <code>ros-desktop</code>. The metapackage contents are specified in <a href="http://www.ros.org/reps/rep-2001.html">REP-2001</a> and you can open pull pull requests against the <a href="https://github.com/ros-infrastructure/rep" rel="nofollow noopener">ros-infrastructure/rep</a> project to propose modifications.']['I don’t agree that colcon or any tools needed only at build time ought to be in <code>ros-base</code>', 'I happen to completely agree with you there, but that leads toward having runtime and development completely split, and we’re not there. We’re at an awkward in-between, where installing ros-base pulls in all sorts of headers, which are only useful at build time, but no tool to utilize them.', 'Anyway though, not a big deal, just awkward enough I thought it may have been an oversight. If not, cool.']['We’re happy to announce another 34 new packages for Bouncy. Full details are below.', 'Thank you to everyone who has contributed as a maintainer or individual contributor to these releases!', 'I’d like to introduce <a class="mention" href="/u/nuclearsandwich">@nuclearsandwich</a> that will be handling the ROS Bouncy syncs in the future', 'Thanks to all ROS maintainers who make packages available to the ROS community. The above list of packages was made possible by the work of the following maintainers:']['Now we can see it has different cases in the ros2 packages which are cloned with the <a href="https://raw.githubusercontent.com/ros2/ros2/release-latest/ros2.repos" rel="nofollow noopener">repo file</a>:', 'with a top CMakeLists.txt, it works for all, because it is the standard behaviour to CMake, so why not to add a top CMakeLists.txt to organize and propagate the whole building with the subsidiary packages or projects to make it standard ? or once the “No CMakeLists.txt” error found, there are so many packages to handle for this kind of ROS2 packages.(actually, now I met this kind of error when I try to enable ROS2 with another environment which merely supports to pass source tarball of a project (e.g rcl) to build the package (e.g) as RPM package)', 'PS: I know that it also works to wrap the corresponding build environment just like ament/colcon to bypass that kind of “No CMakeLists.txt” issue, but I’m try to discuss why not make it as the standard way of working for CMake directly, thanks ! <img src="https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:">']['Repositories such as <code>rcl</code> are not a single CMake project. They are a collection of related packages and they do not necessarily need or want to be built as a single CMake project. They are designed to be build individually but in the correct order. The build order may be non-trivial, for example, or you might ant to only build one package from a large repository. This is why although you can clone the repository to get all the packages at once, you need to use a tool like <code>colcon</code> to build them. <code>colcon</code> will sort out things like the build order automatically based on information in the <code>package.xml</code> file, which often contains information not found in the <code>CMakeLists.txt</code> file. Furthermore, some repositories may have a mix of C/C++ and Python (or other language) packages. It wouldn’t be feasible to insist that these all have a top level <code>CMakeLists.txt</code> file.']['Regarding building multiple packages in a single CMake context the following design doc describes why that is a “bad” idea: <a href="http://design.ros2.org/articles/ament.html#building-within-a-single-cmake-context">http://design.ros2.org/articles/ament.html#building-within-a-single-cmake-context</a>', 'Also some ROS 2 packages are not built with CMake at all but are Python packages.'][]['You can use bloom to help with building binary packages.']['And Bloom should already support <code>spec</code> file generation. That was added for Fedora support of ROS 1.']['And Bloom should already support <code>spec</code> file generation. That was added for Fedora support of ROS 1.', 'The RPM spec file generation doesn’t yet support the build types needed for ROS 2. It was refactored to allow for support to be contributed and I’ll make every effort to review pull requests and provide guidance in that direction. I’m not familiar enough with the RPM generation to estimate how much change is required from the catkin build types.']['if we want to build those ros2 packages as RPM package …', 'You should map each ROS package to a RPM package. That is the same way as it is done in ROS 1 and for Debian packages in ROS 2.', 'And Bloom should already support <code>spec</code> file generation. That was added for Fedora support of ROS 1.', 'While bloom supports <code>spec</code> file generation for ROS 1 I don’t think it  does for ROS 2 at the moment. Several patches necessary for ROS 2 where only applied to the Debian process (e.g. <a href="https://github.com/ros-infrastructure/bloom/pull/475" class="inline-onebox" rel="noopener nofollow ugc">Inject vendor typesupport packages at build time for ROS 2. by nuclearsandwich · Pull Request #475 · ros-infrastructure/bloom · GitHub</a>). I don’t have a good overview what else would need to be updated but patching <code>bloom</code> to support RPMs in ROS 2 would be the way to go.']['ok. thanks. what needs to contain in binary package installation of debian/RPM is the content under the <code>install</code> folder of the corresponding package, am I right ? If it’s right, does it work with the following process for RPM creation for quick prototype/verification? as follow:', 'I know that it’s not feasible to manually create spec and RPM for many package in this way, and it also requires a great deal of effort to maintain, just try to verify one project before further code development. <img src="https://emoji.discourse-cdn.com/twitter/sweat_smile.png?v=6" title=":sweat_smile:" class="emoji" alt=":sweat_smile:">']['I’d suggest taking a look at bloom’s current template for catkin (ROS 1) packages: <a href="https://github.com/ros-infrastructure/bloom/blob/91ba7f133ecb773a20a1d2735cd1c9afc35cc2b8/bloom/generators/rpm/templates/catkin/template.spec.em" rel="nofollow noopener">https://github.com/ros-infrastructure/bloom/blob/91ba7f133ecb773a20a1d2735cd1c9afc35cc2b8/bloom/generators/rpm/templates/catkin/template.spec.em</a>', 'Packages built with bloom templates use the default build tool for their build type, cmake for cmake, catkin, and ament_cmake, and python setuptools for python packages respectively rather than using the recommended build tool for working with source workspaces.']['I am looking at porting tf2_ros/include/message_filter.h from ROS1 to ROS2 (see issue: <a href="https://github.com/ros2/geometry2/issues/59" rel="nofollow noopener">https://github.com/ros2/geometry2/issues/59</a>).', 'The existing tf2 message_filter.h relies on using the CallbackQueueInterface in order to enqueue messages that it receives before they are sent on to subsequent filters/callbacks. It appears that ROS2 has changed the concept of a node have a single CallbackQueue to a node having multiple CallbackGroups that can have different thread locking mechanisms. This makes sense, but it is unclear to me how I can use a CallbackGroup instance to add a callback event to be processed. Are callback groups the proper way to handle this in ROS2 or is there a different mechanism that should be used to decouple two filters in a chain from being run in the same thread context? If CallbackGroups are the proper way to do this then how do you actually add a Callback to the group in order for it to be processed?']['If anyone runs into this I’ve answered this question at: <a href="https://answers.ros.org/question/300874/how-do-you-use-callbackgroups-as-a-replacement-for-callbackqueues-in-ros2/?answer=301165#post-id-301165">https://answers.ros.org/question/300874/how-do-you-use-callbackgroups-as-a-replacement-for-callbackqueues-in-ros2/?answer=301165#post-id-301165</a>']['Hi there,', 'I’m trying to run Raspberry Pi camera node on ROS2 from: <a href="https://github.com/christianrauch/raspicam2_node" rel="nofollow noopener">https://github.com/christianrauch/raspicam2_node</a>.', 'I have successfully built ROS2 (latest public release) on my Raspberry Pi and ran the publisher/listener examples.', 'After building the above project for Raspberry Pi camera, I am not able to actually run it with <code>ros2 run</code> command. When I list all existing packages with <code>ros2 pkg list</code>, I don’t see the package above in the summary.', 'Any help would be great, since I’m new to the tooling of ROS2.', 'Ping for the original author of the Raspberry Pi camera node for ROS2: <a class="mention" href="/u/christian">@christian</a> <img src="https://emoji.discourse-cdn.com/twitter/grinning.png?v=5" title=":grinning:" class="emoji" alt=":grinning:">', 'Thanks!', 'B.']['Ok, so the trick was to source the package properly. Ament (the build tool) creates artifacts in the <code>install</code> folder with bunch of helper scripts.', 'All you need to do is to source it with <code>. ./install/local_setup.bash</code>. Now, <code>ros2 pkg list</code> will list the <code>rospicam2</code> package.']['But i have no good way to get the right path where the file stores and then read it', 'i’m using the absolute path to read the file now but i want to make it relative so the package can be used in different environment .', 'looking forward to some suggestions !']['Thanks for the question, but we ask that you post it on <a href="http://answers.ros.org">answers.ros.org</a> with the <code>ros2</code> tag instead. You can link to it from here once you do so.', 'ROS Discourse is for news and general interest discussions. ROS Answers provides a forum which can be filtered by tags to make sure the relevant people can find and/or answer the question, and not overload everyone with hundreds of posts.', 'edit: posted at <a href="https://answers.ros.org/question/290767/how-to-load-the-configuration-file-in-package-in-ros2/">https://answers.ros.org/question/290767/how-to-load-the-configuration-file-in-package-in-ros2/</a>']['sorry to post it here and thank you !']['but it is not getting build and following error is being shown']['You’re going to have to give some more details here, it looks like you have rcl depending on rcl (and rclcpp) based on the cmake output. I have no idea what’s going on, and I guess it has something to do with “my rcl package” which implies to me you’ve been changing rcl in place?']['Happy Friday. The ROS 2 team is pleased to present the first update to ROS 2 Ardent Apalone.', 'Highlights in this release:', 'To celebrate, we present the official release illustration for ROS 2 Ardent Apalone', 'Which you can get printed on a shirt or jacket during <a href="https://teespring.com/ros-ardent" rel="nofollow noopener">our t-shirt campaign</a> (use <a href="https://teespring.com/ros-ardent-eu" rel="nofollow noopener">this link</a> for the EU distribution center). The campaign will end March 2nd.', 'As always, we invite you to try out the new software, give feedback, report bugs, and suggest features (and contribute code!): <a href="https://github.com/ros2/ros2/wiki/Contact" rel="nofollow noopener">https://github.com/ros2/ros2/wiki/Contact</a>', 'So pull down <a href="https://github.com/ros2/ros2/releases/tag/release-ardent-20180209" rel="nofollow noopener">an archive release</a>, grab the <a href="https://github.com/ros2/ros2/wiki/Linux-Install-Debians" rel="nofollow noopener">packages from the Ubuntu repos</a>, or <a href="https://github.com/ros2/ros2/wiki/Installation#building-from-source" rel="nofollow noopener">build it from source</a> and let us know what you think.', '<em>Your friendly neighborhood ROS 2 Team</em>']['Hello,', 'My project in ros2 has', '<code>find_package(rclcpp REQUIRED)</code>', 'which is throwing all this build error:', 'What could be wrong?'][]['I wrote a simple package with class and library to subscribe and publish using rclcpp.', 'My CMakeLists.txt is:', 'It builds well. However when I try to run the package like this:', 'Is there something like roscore in ros2 to have the ROS_MASTER and ros services running? I have sourced <code>install/local_setup.bash</code> as given in the tutorials.']['Your CMake installs you binary to bin, but ros2 run only looks in the “libexec” folder (actually <code>lib/pkg</code>) for executables. Your binary is just on the PATH, so you don’t need ros2 run to easily execute it.', 'See our examples for how to install to libexec:']['Thanks WIlliam ! could we do something like <code>rostopic pub</code> from the terminal in ros2?', 'Is it going to be like <code>ros2 ropic pub /test_topic std_msgs/msgs/String "hello there"</code>?? <a class="mention" href="/u/wjwwood">@wjwwood</a>']['Also, I realized when I run my executable like <code>ros2 run testpackage test_node</code> … and then do <code>ros2 node list.</code> It shows me the right name. However, when I exit my program (Ctrl+C) I still happen to find my <code>ros2 node</code> if I do a <code>ros2 node list</code>. The instance continues to be there which is sometimes also seen in ROS 1 if a large number of nodes are running however not for just one node.', 'Another point is my topic names. Even after exiting my running executable <code>ros2 topic list</code> still, shows the topic names. I changed the topic names in my program and built it again and ran it, however, the topic names weren’t changed or I don’t know if it’s the old instance running. Regardless of that, I tried killing the node by <code>ros2 node kill --all</code> however seems like that is not the command to kill anymore.']['Is it going to be like ros2 ropic pub /test_topic std_msgs/msgs/String “hello there”??', 'Please see <code>ros2 topic pub --help</code> for an example.', 'Also, I realized when I run my executable like ros2 run testpackage test_node … and then do ros2 node list. It shows me the right name. However, when I exit my program (Ctrl+C) I still happen to find my ros2 node if I do a ros2 node list.', 'For me it works for the <code>demo_nodes_cpp</code> / <code>demo_nodes_py</code> <code>talker</code> and <code>listener</code> using FastRTPS on Ubuntu using Beta 3. Maybe you can provide more information what environment / version / nodes you are experiencing it with.']['It throws me this:']['Copied from:']['Ah thanks yes I tried earlier, however I totally did not give the space between data: and Hello. Thanks much']['Just a quick question, do we create metapackages in ament ros2 the same way as in ros1?']['however I totally did not give the space between data: and Hello.', 'Ah yeah the space is not obvious given that the help message wraps the line just after the <code>:</code>. That tricked me recently as well. The error message has been <a href="https://github.com/ros2/ros2cli/pull/48">improved recently</a> to make it clearer that a YAML dictionary is expected.', 'Just a quick question, do we create metapackages in ament ros2 the same way as in ros1?', 'This has been <a href="https://github.com/ros2/common_interfaces/pull/41">brought up recently</a> but it hasn’t been decided yet if metapackages should exist as ament packages or if they should be stored in a central place given that they are for producing binaries only and should not be used as dependencies']['Any tipps what I can do in order to resolve this issue?']['Thanks!']['export CMAKE_PREFIX_PATH=$AMENT_PREFIX_PATH:$CMAKE_PREFIX_PATH', 'That’s it. Works fine now.']['Wouldn’t it be possible to integrate this step into the setup script of the workspace? I think its quite annoying to do this by hand.']['The current setup files only set/update environment variables in order to “run” the ROS 2 packages.', 'There might be separate scripts in the future to setup the environment for building (see <a href="https://github.com/ament/ament_tools/issues/76">https://github.com/ament/ament_tools/issues/76</a>). For now you have to set the <code>CMAKE_PREFIX_PATH</code> manually.']['I am interested in adding custom metadata to the ROS-2 package.xml and providing a way to validate that other packages correctly define that metadata. However, when I attempt to add a new XML tag (e.g., ‘my_custom_tag’) ament fails during the validation process, with the following error:', 'Is there a recommended way to get around the validation that the package.xml contains no unknown tags? Is this even possible? I’d prefer not to have to branch ament_package.', 'It may make sense for companies/organizations to add their own custom metadata to packages and ideally they would not need to modify ament_package. In some/most cases this metadata is not something that would make sense to include in ament_package (e.g., company specific).', 'One option is to include the custom metadata in a separate XML file, but I would prefer to have a single file for package information.', 'Assuming I can get ament to accept the custom metadata (or I use a separate XML file), are there are suggestions on how best to validate the metadata at build/compile time? My plan is to provide some custom cmake scripts to perform the validation, but was curious if there are better approaches.']['There’s space for custom tags in the export tag. See the documentation here <a href="http://www.ros.org/reps/rep-0140.html#export">http://www.ros.org/reps/rep-0140.html#export</a>', 'I think that should satisfy your use case.']['Thanks <a class="mention" href="/u/tfoote">@tfoote</a> for pointing that out – it should work for what I want to do.']['I’ve automated a built of a set of ros2 debian packages with checkinstall for x86. They are built each morning at 8am (MET). I build them from the current master branches. Because they are built with checkinstall they don’t include any dependencies. You will still have to follow the instructions in the ros2 wiki regarding the dependencies. The workspace is installed to /opt/ros2_ws. You will have to source it afterwards.', 'The link to the packages is : <a href="http://firesurfer.de/ros2/" rel="nofollow noopener">http://firesurfer.de/ros2/</a>', 'Perhaps it’s useful for a couple of people interessted in ros2.']